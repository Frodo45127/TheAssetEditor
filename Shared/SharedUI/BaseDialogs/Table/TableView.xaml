<UserControl x:Class="CommonControls.Table.TableView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CommonControls.Table"
             mc:Ignorable="d" 
             xmlns:dotNetKitControls="clr-namespace:DotNetKit.Windows.Controls;assembly=DotNetKit.Wpf.AutoCompleteComboBox"
              xmlns:s="http://schemas.singulink.com/xaml"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <local:DataRowViewConverter x:Key="drvc" />

        <ToolTip x:Key="ErrorToolTip">
            <TextBlock Text="{Binding ErrorText, UpdateSourceTrigger=PropertyChanged}"/>
        </ToolTip>

        <Style x:Key="BackgroundColourStyle" TargetType="{x:Type Control}">
            <Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType=DataGridCell}}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsValid, UpdateSourceTrigger=PropertyChanged}" Value="false">
                    <Setter Property="Background" Value="OrangeRed" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType=DataGridCell}}" Value="true">
                    <Setter Property="Background" Value="LightBlue" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="IndexColoumnStyle" TargetType="{x:Type Control}">
            <Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType=DataGridCell}}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType=DataGridCell}}" Value="true">
                    <Setter Property="Background" Value="LightBlue" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ComboBoxTemplateToolStyle"  TargetType="{x:Type Control}">
            <Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType=DataGridCell}}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsValid, UpdateSourceTrigger=PropertyChanged}" Value="false">
                    <Setter Property="Foreground" Value="OrangeRed" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType=DataGridCell}}" Value="true">
                    <Setter Property="Foreground" Value="DarkBlue" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="BaseTemplate" >
            <DockPanel DataContext="{Binding RelativeSource={RelativeSource AncestorType=DataGridCell}, Converter={StaticResource drvc}}">
                <TextBox Text="{Binding Data, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                         AcceptsReturn="False" AcceptsTab="False"
                         DockPanel.Dock="Left"
                         IsEnabled="{Binding IsEditable}"
                         ToolTip="{StaticResource ErrorToolTip}"
                         Style="{StaticResource BackgroundColourStyle}">
                </TextBox>
            </DockPanel>
        </DataTemplate>

        <DataTemplate x:Key="IndexTemplate" >
            <DockPanel DataContext="{Binding RelativeSource={RelativeSource AncestorType=DataGridCell}, Converter={StaticResource drvc}}">
                <TextBox Text="{Binding Data, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                         AcceptsReturn="False" AcceptsTab="False"
                         DockPanel.Dock="Left"
                         IsEnabled="{Binding IsEditable}"
                         Style="{StaticResource IndexColoumnStyle}"
                         HorizontalContentAlignment="Center">
                </TextBox>
            </DockPanel>
        </DataTemplate>


        <DataTemplate x:Key="BoolTemplate" >
            <DockPanel DataContext="{Binding RelativeSource={RelativeSource AncestorType=DataGridCell}, Converter={StaticResource drvc}}">
                <CheckBox DockPanel.Dock="Left" HorizontalAlignment="Center" VerticalContentAlignment="Center"
                          IsChecked="{Binding Data, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                          ToolTip="{StaticResource ErrorToolTip}"
                          IsEnabled="{Binding IsEditable}"
                          Style="{StaticResource BackgroundColourStyle}">
                </CheckBox>
            </DockPanel>
        </DataTemplate>

        <DataTemplate x:Key="ButtonTemplate" >
            <DockPanel >
                <Button DockPanel.Dock="Right" Content="..." 
                        DataContext="{Binding RelativeSource={RelativeSource AncestorType=DataGridCell}, Converter={StaticResource drvc}}"
                        Command="{Binding ClickCommand}"
                        CommandParameter="{Binding CurrentCell, RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}}"/>
            </DockPanel>
        </DataTemplate>

        <DataTemplate x:Key="ComboBoxTemplate">
            <DockPanel DataContext="{Binding RelativeSource={RelativeSource AncestorType=DataGridCell}, Converter={StaticResource drvc}}">
                <ComboBox Name="cmbContains" IsEditable="True" IsTextSearchEnabled="false"
                          Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                          ItemsSource="{Binding PossibleValues}" 
                          SelectedItem="{Binding Data, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                          ToolTip="{StaticResource ErrorToolTip}"   
                          IsEnabled="{Binding IsEditable}"
                          Style="{StaticResource ComboBoxTemplateToolStyle}">

                    <ComboBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </ComboBox.ItemsPanel>

                </ComboBox>
            </DockPanel>
        </DataTemplate>

        <DataTemplate x:Key="BitflagTemplate">
            <DockPanel DataContext="{Binding RelativeSource={RelativeSource AncestorType=DataGridCell}, Converter={StaticResource drvc}}">
                <ItemsControl  ItemsSource="{Binding Flags}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>

                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Value, Mode=TwoWay}"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </DockPanel>
        </DataTemplate>

        <Style x:Key="ImageStyle" TargetType="Image">
            <Setter Property="Height" Value="32"/>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.25"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <ToolBarTray Grid.Row="0"  >
            <ToolBar>
                <Button ToolTip="Save "  Command="{Binding SaveCommand, Mode=OneTime}" IsEnabled="{Binding SaveEnabled.Value, UpdateSourceTrigger=PropertyChanged}">
                    <Image  Style="{StaticResource ImageStyle}" Source="pack://application:,,,/CommonControls;component/Resources/Icons/kitbasher/icons8-save-all-50.png"/>
                </Button>

                <Separator/>
                
                <Button ToolTip="New entry"  Command="{Binding NewEntryCommand, Mode=OneTime}" IsEnabled="{Binding NewEnabled.Value, UpdateSourceTrigger=PropertyChanged}">
                    <Image  Style="{StaticResource ImageStyle}" Source="pack://application:,,,/CommonControls;component/Resources/Icons/icons8-new-copy-50.png"/>
                </Button>

                <Button ToolTip="Delete"  Command="{Binding DeleteCommand, Mode=OneTime}" IsEnabled="{Binding ValidateEnabled.Value, UpdateSourceTrigger=PropertyChanged}">
                    <Image  Style="{StaticResource ImageStyle}" Source="pack://application:,,,/CommonControls;component/Resources/Icons/icons8-trash-can-50.png"/>
                </Button>
                
                <Separator/>
                
                <Button ToolTip="Validate"  Command="{Binding ValidateCommand, Mode=OneTime}" IsEnabled="{Binding ValidateEnabled.Value, UpdateSourceTrigger=PropertyChanged}">
                    <Image  Style="{StaticResource ImageStyle}" Source="pack://application:,,,/CommonControls;component/Resources/Icons/kitbasher/Validate.png"/>
                </Button>

                <Button ToolTip="Export"  Command="{Binding ExportCommand, Mode=OneTime}" IsEnabled="{Binding ExportEnabled.Value, UpdateSourceTrigger=PropertyChanged}">
                    <Image  Style="{StaticResource ImageStyle}" Source="pack://application:,,,/CommonControls;component/Resources/Icons/icons8-move-right-48.png"/>
                </Button>
            </ToolBar>
        </ToolBarTray>

        <DataGrid Grid.Row="1"        
                  Name="dataGrid1"
                  ItemsSource="{Binding Data.DefaultView, UpdateSourceTrigger=PropertyChanged}" 
                  SelectedItem="{Binding Path=SelectedRow, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                  AutoGenerateColumns="True"
                  CanUserAddRows="false" 
                  EnableRowVirtualization="True"
                  EnableColumnVirtualization="True"
                  VirtualizingPanel.ScrollUnit="Pixel"
                  local:DataGridBehavior.DisplayRowNumber="True"
                  VirtualizingStackPanel.VirtualizationMode="Standard"
                  VirtualizingStackPanel.IsVirtualizing="True"
                  AlternationCount="2" 
                  AutoGeneratingColumn="DataGrid_AutoGeneratingColumn" >

            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Duplicate" 
                         Command="{Binding DuplicateRowCommand}"
                         CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}" />
                    <MenuItem Header="New" 
                         Command="{Binding NewRowCommand}"/>
                    <MenuItem Header="Delete"
                         Command="{Binding DeleteRowCommand}"
                         CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}" />
                    <MenuItem Header="Delete all but selected" IsEnabled="False"/>
                </ContextMenu>
            </DataGrid.ContextMenu>
            
            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}">
                    <Style.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter Property="Background" Value="#EEEEEE" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
        </DataGrid>

        <DockPanel Grid.Row="2">
            <Button Content="Filter" Width="100" DockPanel.Dock="Right"  Command="{Binding SearchCommand}" CommandParameter="{Binding FilterText}" />
            <TextBox Text="{Binding FilterText, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" AcceptsReturn="False" >
                <TextBox.InputBindings>
                    <KeyBinding 
                    Key="Enter" 
                    Command="{Binding SearchCommand}" 
                    CommandParameter="{Binding Path=Text, RelativeSource={RelativeSource AncestorType={x:Type TextBox}}}" />
                </TextBox.InputBindings>
            </TextBox>
        </DockPanel>
    </Grid>
</UserControl>